[{"content":" 相关软件（不限版本）\nnautilus 刚装好 Ubuntu，我们在文件管理器的右键菜单里面找不到新建文件的选项，这确实很让人匪夷所思。\n实际上，我们只需要在 ~/Templates 新建一个模板就好。\n1 2 3 $ cd ~/Templates $ touch `TXT.txt` $ touch `Markdown.md` 当然这个方案并不完美，就是并没有在新建文件后自动处于重命名状态的功能。\n","permalink":"http://localhost:1313/en/posts/nautilus-new-file/","summary":"为 nautilus 添加新建选项的菜单并不困难。因为 ~/Templates 就是专门为之服务的。","title":"如何为 nautilus 右键菜单添加新建文件选项"},{"content":" 相关软件版本\nUbuntu 22.04 及以上 nautilus 是 GNOME 桌面环境默认的 GUI 文件管理器。\n本来其实没想到这样一个简单的任务会引起一些麻烦。把我处理这个麻烦的过程记下来吧。\n首先，我们百度搜索这个问题，从一些相当新的帖子获得的解决方案是安装 nautilus-actions。但意外的是，在 Ubuntu 22.04 中，这个包被移除了。\n我们转战谷歌，找到了这篇帖子，告诉我们这个软件因为缺少更新已经被上游的 gnome 存档了。我们也并不想使用已经被废弃的软件，那就去找替代方案吧——我相信不可能没有提供。\n意外发现：gnome 原来用 gitlab 管理项目，有趣。\n翻译者没有兴趣维护这个软件：\u0026ldquo;Sorry, but if there\u0026rsquo;s no contributions for several years, we\u0026rsquo;re not going to keep it active. It wastes the efforts of our translators. Feel free to fork and maintain it somewhere else if you like (it\u0026rsquo;s open source, after all).\u0026rdquo;\n另一篇帖子 指出了两个替代方案：一个是我在以前使用过的 Nautilus Scripts，最终效果是在右键菜单里面显示一个 Scripts 子菜单，里面有我们写好的脚本作为选项。这种方法不够优雅，我们希望显示在主右键菜单里面；另一个是 nautilus-python，出于对 python 的好感我们最终选择这个方案。\n问题又来了，在 Ubuntu 安装 nautilus-python，也没有这个包。经过检查，一篇帖子 指出其在 Ubuntu 源的名称是 python3-nautilus，这可能是因为一些误解产生的问题。\n现在我们学习写 python 代码来实现 nautilus-python 的扩展。参考资源：官方示例、linuxconfig.org 的教程。我们将写好的 python 文件保存到 ~/.local/share/nautilus-python/extensions/ 即可，然后重启 nautilus 即可。\n先看下面的示例，其为 VSCode 打开文件夹和文件提供了右键菜单（使用命令 wget -qO- https://raw.githubusercontent.com/harry-cpp/code-nautilus/master/install.sh | bash 以快速安装，我对代码做了一些简化，原本的源代码请参考相应的 GitHub 仓库）：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 from gi.repository import Nautilus, GObject from subprocess import call import os class VSCodeExtension(GObject.GObject, Nautilus.MenuProvider): # python 支持多重继承 def launch_vscode(self, menu, files): # 参数是 self, menu, files，注意不要修改 safepaths = \u0026#39;\u0026#39; args = \u0026#39;\u0026#39; for file in files: filepath = file.get_location().get_path() safepaths += \u0026#39;\u0026#34;\u0026#39; + filepath + \u0026#39;\u0026#34; \u0026#39; if os.path.isdir(filepath) and os.path.exists(filepath): args = \u0026#39;--new-window \u0026#39; call(\u0026#39;code \u0026#39; + args + safepaths + \u0026#39;\u0026amp;\u0026#39;, shell=True) def get_file_items(self, *args): # 右键文件/文件夹时对应的方法 files = args[-1] item = Nautilus.MenuItem( name=\u0026#39;VSCodeOpen\u0026#39;, label=\u0026#39;Open in Code\u0026#39;, tip=\u0026#39;Opens the selected files with VSCode\u0026#39; ) item.connect(\u0026#39;activate\u0026#39;, self.launch_vscode, files) return [item] def get_background_items(self, *args): # 右键空白位置时的方法 file_ = args[-1] item = Nautilus.MenuItem( name=\u0026#39;VSCodeOpenBackground\u0026#39;, label=\u0026#39;Open in Code\u0026#39;, tip=\u0026#39;Opens the current directory in VSCode\u0026#39; ) item.connect(\u0026#39;activate\u0026#39;, self.launch_vscode, [file_]) return [item] 上面的 python 代码足够直观了。get_backgroud_items 和 get_file_items 返回一个菜单数组，而菜单如何创建和与具体的操作方法链接上面的示例已经足够说明。\n","permalink":"http://localhost:1313/en/posts/nautilus-right-click/","summary":"nautilus 是 GNOME 桌面环境默认的 GUI 文件管理器。本文介绍如何为 nautilus 添加自定义的右键菜单项。","title":"如何为 nautilus 配置右键菜单"}]